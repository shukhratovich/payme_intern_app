kotlin version: 2.1.10
error message: org.jetbrains.kotlin.backend.common.BackendException: Backend Internal error: Exception during IR lowering
File being compiled: /Users/asomiddin/AndroidStudioProjects/PaymeInternApp/stopwatch/src/main/java/com/example/stopwatch/screen/stopwatcher/StopwatchScreen.kt
The root cause java.lang.RuntimeException was thrown at: org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:48)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException(CodegenUtil.kt:253)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException$default(CodegenUtil.kt:236)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:55)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:42)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:28)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:27)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:14)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:62)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:371)
	at org.jetbrains.kotlin.codegen.CodegenFactory.generateModule(CodegenFactory.kt:47)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateModuleInFrontendIRMode(JvmIrCodegenFactory.kt:433)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.generateCodeFromIr(jvmCompilerPipeline.kt:192)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.runBackend(jvmCompilerPipeline.kt:80)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineLightTreeKt.compileModule(jvmCompilerPipelineLightTree.kt:264)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineLightTreeKt.compileSingleModuleUsingFrontendIrAndLightTree(jvmCompilerPipelineLightTree.kt:231)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineLightTreeKt.compileModulesUsingFrontendIrAndLightTree(jvmCompilerPipelineLightTree.kt:86)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:146)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:43)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:102)
	at org.jetbrains.kotlin.cli.common.CLICompiler.exec(CLICompiler.kt:316)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:464)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:73)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:506)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:423)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileNonIncrementally(IncrementalCompilerRunner.kt:301)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:129)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:683)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:91)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1811)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.RuntimeException: Exception while generating code for:
FUN name:StopwatchScreen visibility:public modality:FINAL <> (modifier:androidx.compose.ui.Modifier) returnType:kotlin.Unit
  annotations:
    Composable
  VALUE_PARAMETER name:modifier index:0 type:androidx.compose.ui.Modifier
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=androidx.compose.ui.Modifier
  BLOCK_BODY
    VAR name:viewModel type:com.example.stopwatch.screen.stopwatcher.StopwatchViewModel [val]
      TYPE_OP type=com.example.stopwatch.screen.stopwatcher.StopwatchViewModel origin=IMPLICIT_CAST typeOperand=com.example.stopwatch.screen.stopwatcher.StopwatchViewModel
        CALL 'public final fun viewModel$default <VM> (viewModelStoreOwner: androidx.lifecycle.ViewModelStoreOwner?, key: kotlin.String?, factory: androidx.lifecycle.ViewModelProvider.Factory?, extras: androidx.lifecycle.viewmodel.CreationExtras?, $mask0: kotlin.Int, $handler: kotlin.Any?): VM of androidx.lifecycle.viewmodel.compose.ViewModelKt.viewModel$default [inline] declared in androidx.lifecycle.viewmodel.compose.ViewModelKt' type=VM of androidx.lifecycle.viewmodel.compose.ViewModelKt.viewModel$default origin=DEFAULT_DISPATCH_CALL
          <VM>: com.example.stopwatch.screen.stopwatcher.StopwatchViewModel
          viewModelStoreOwner: COMPOSITE type=androidx.lifecycle.ViewModelStoreOwner? origin=DEFAULT_VALUE
            CONST Null type=androidx.lifecycle.ViewModelStoreOwner? value=null
          key: COMPOSITE type=kotlin.String? origin=DEFAULT_VALUE
            CONST Null type=kotlin.String? value=null
          factory: COMPOSITE type=androidx.lifecycle.ViewModelProvider.Factory? origin=DEFAULT_VALUE
            CONST Null type=androidx.lifecycle.ViewModelProvider.Factory? value=null
          extras: COMPOSITE type=androidx.lifecycle.viewmodel.CreationExtras? origin=DEFAULT_VALUE
            CONST Null type=androidx.lifecycle.viewmodel.CreationExtras? value=null
          $mask0: CONST Int type=kotlin.Int value=15
          $handler: CONST Null type=kotlin.Any? value=null
    VAR name:uiState type:androidx.compose.runtime.State<com.example.stopwatch.screen.stopwatcher.StopwatchContract.UiState> [val]
      TYPE_OP type=androidx.compose.runtime.State<com.example.stopwatch.screen.stopwatcher.StopwatchContract.UiState> origin=IMPLICIT_CAST typeOperand=androidx.compose.runtime.State<com.example.stopwatch.screen.stopwatcher.StopwatchContract.UiState>
        CALL 'public final fun collectAsState$default <T> (context: kotlin.coroutines.CoroutineContext?, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.runtime.State<T of androidx.compose.runtime.SnapshotStateKt.collectAsState$default> declared in androidx.compose.runtime.SnapshotStateKt' type=androidx.compose.runtime.State<T of androidx.compose.runtime.SnapshotStateKt.collectAsState$default> origin=DEFAULT_DISPATCH_CALL
          <T>: com.example.stopwatch.screen.stopwatcher.StopwatchContract.UiState
          $receiver: CALL 'public open fun <get-uiState> (): kotlinx.coroutines.flow.MutableStateFlow<com.example.stopwatch.screen.stopwatcher.StopwatchContract.UiState> declared in com.example.stopwatch.screen.stopwatcher.StopwatchViewModel' type=kotlinx.coroutines.flow.MutableStateFlow<com.example.stopwatch.screen.stopwatcher.StopwatchContract.UiState> origin=GET_PROPERTY
            $this: GET_VAR 'val viewModel: com.example.stopwatch.screen.stopwatcher.StopwatchViewModel [val] declared in com.example.stopwatch.screen.stopwatcher.StopwatchScreenKt.StopwatchScreen' type=com.example.stopwatch.screen.stopwatcher.StopwatchViewModel origin=null
          context: COMPOSITE type=kotlin.coroutines.CoroutineContext? origin=DEFAULT_VALUE
            CONST Null type=kotlin.coroutines.CoroutineContext? value=null
          $mask0: CONST Int type=kotlin.Int value=1
          $handler: CONST Null type=kotlin.Any? value=null
    VAR name:stopwatchState type:androidx.compose.runtime.State<kotlin.String> [val]
      TYPE_OP type=androidx.compose.runtime.State<kotlin.String> origin=IMPLICIT_CAST typeOperand=androidx.compose.runtime.State<kotlin.String>
        CALL 'public final fun collectAsState$default <T> (context: kotlin.coroutines.CoroutineContext?, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.runtime.State<T of androidx.compose.runtime.SnapshotStateKt.collectAsState$default> declared in androidx.compose.runtime.SnapshotStateKt' type=androidx.compose.runtime.State<T of androidx.compose.runtime.SnapshotStateKt.collectAsState$default> origin=DEFAULT_DISPATCH_CALL
          <T>: kotlin.String
          $receiver: CALL 'public open fun <get-stopwatchState> (): kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> declared in com.example.stopwatch.screen.stopwatcher.StopwatchViewModel' type=kotlinx.coroutines.flow.MutableStateFlow<kotlin.String> origin=GET_PROPERTY
            $this: GET_VAR 'val viewModel: com.example.stopwatch.screen.stopwatcher.StopwatchViewModel [val] declared in com.example.stopwatch.screen.stopwatcher.StopwatchScreenKt.StopwatchScreen' type=com.example.stopwatch.screen.stopwatcher.StopwatchViewModel origin=null
          context: COMPOSITE type=kotlin.coroutines.CoroutineContext? origin=DEFAULT_VALUE
            CONST Null type=kotlin.coroutines.CoroutineContext? value=null
          $mask0: CONST Int type=kotlin.Int value=1
          $handler: CONST Null type=kotlin.Any? value=null
    CALL 'private final fun StopwatchScreenContent (modifier: androidx.compose.ui.Modifier, stopwatchState: kotlin.String, uiState: com.example.stopwatch.screen.stopwatcher.StopwatchContract.UiState, onEventDispatcher: kotlin.Function1<com.example.stopwatch.screen.stopwatcher.StopwatchContract.Intent, kotlin.Unit>): kotlin.Unit declared in com.example.stopwatch.screen.stopwatcher.StopwatchScreenKt' type=kotlin.Unit origin=null
      modifier: GET_VAR 'modifier: androidx.compose.ui.Modifier declared in com.example.stopwatch.screen.stopwatcher.StopwatchScreenKt.StopwatchScreen' type=androidx.compose.ui.Modifier origin=null
      stopwatchState: CALL 'public abstract fun <get-value> (): T of androidx.compose.runtime.State declared in androidx.compose.runtime.State' type=kotlin.String origin=GET_PROPERTY
        $this: GET_VAR 'val stopwatchState: androidx.compose.runtime.State<kotlin.String> [val] declared in com.example.stopwatch.screen.stopwatcher.StopwatchScreenKt.StopwatchScreen' type=androidx.compose.runtime.State<kotlin.String> origin=null
      uiState: CALL 'public abstract fun <get-value> (): T of androidx.compose.runtime.State declared in androidx.compose.runtime.State' type=com.example.stopwatch.screen.stopwatcher.StopwatchContract.UiState origin=GET_PROPERTY
        $this: GET_VAR 'val uiState: androidx.compose.runtime.State<com.example.stopwatch.screen.stopwatcher.StopwatchContract.UiState> [val] declared in com.example.stopwatch.screen.stopwatcher.StopwatchScreenKt.StopwatchScreen' type=androidx.compose.runtime.State<com.example.stopwatch.screen.stopwatcher.StopwatchContract.UiState> origin=null
      onEventDispatcher: BLOCK type=com.example.stopwatch.screen.stopwatcher.StopwatchScreenKt.StopwatchScreen.<no name provided> origin=null
        CLASS FUNCTION_REFERENCE_IMPL CLASS name:<no name provided> modality:FINAL visibility:public/*package*/ superTypes:[kotlin.jvm.internal.FunctionReferenceImpl; kotlin.Function1<com.example.stopwatch.screen.stopwatcher.StopwatchContract.Intent, kotlin.Unit>]
          $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:com.example.stopwatch.screen.stopwatcher.StopwatchScreenKt.StopwatchScreen.<no name provided>
          CONSTRUCTOR GENERATED_MEMBER_IN_CALLABLE_REFERENCE visibility:public/*package*/ <> (receiver:kotlin.Any?) returnType:com.example.stopwatch.screen.stopwatcher.StopwatchScreenKt.StopwatchScreen.<no name provided> [primary]
            VALUE_PARAMETER name:receiver index:0 type:kotlin.Any?
            BLOCK_BODY
              DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> (arity: kotlin.Int, receiver: kotlin.Any?, owner: java.lang.Class<*>, name: kotlin.String, signature: kotlin.String, flags: kotlin.Int) declared in kotlin.jvm.internal.FunctionReferenceImpl'
                arity: CONST Int type=kotlin.Int value=1
                receiver: GET_VAR 'receiver: kotlin.Any? declared in com.example.stopwatch.screen.stopwatcher.StopwatchScreenKt.StopwatchScreen.<no name provided>.<init>' type=kotlin.Any? origin=null
                owner: CALL 'public final fun <get-java> (): java.lang.Class<*> declared in kotlin.jvm.JvmClassMappingKt' type=java.lang.Class<*> origin=GET_PROPERTY
                  $receiver: CLASS_REFERENCE 'CLASS IR_EXTERNAL_DECLARATION_STUB INTERFACE name:KClass modality:ABSTRACT visibility:public superTypes:[kotlin.reflect.KDeclarationContainer; kotlin.reflect.KAnnotatedElement; kotlin.reflect.KClassifier]' type=kotlin.reflect.KClass<*>
                name: CONST String type=kotlin.String value="onEventDispatcher"
                signature: CALL 'public final fun <signature-string> (v: kotlin.Any?): kotlin.String declared in kotlin.jvm.internal' type=kotlin.String origin=null
                  v: FUNCTION_REFERENCE 'public open fun onEventDispatcher (intent: com.example.stopwatch.screen.stopwatcher.StopwatchContract.Intent): kotlin.Unit declared in com.example.stopwatch.screen.stopwatcher.StopwatchViewModel' type=kotlin.reflect.KFunction1<com.example.stopwatch.screen.stopwatcher.StopwatchContract.Intent, kotlin.Unit> origin=null reflectionTarget=<same>
                flags: CONST Int type=kotlin.Int value=0
              BLOCK type=kotlin.Unit origin=null
          FUN name:invoke visibility:public modality:FINAL <> ($this:com.example.stopwatch.screen.stopwatcher.StopwatchScreenKt.StopwatchScreen.<no name provided>, p0:com.example.stopwatch.screen.stopwatcher.StopwatchContract.Intent) returnType:kotlin.Unit
            overridden:
              public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 [operator] declared in kotlin.Function1
            $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:com.example.stopwatch.screen.stopwatcher.StopwatchScreenKt.StopwatchScreen.<no name provided>
            VALUE_PARAMETER name:p0 index:0 type:com.example.stopwatch.screen.stopwatcher.StopwatchContract.Intent
            EXPRESSION_BODY
              CALL 'public open fun onEventDispatcher (intent: com.example.stopwatch.screen.stopwatcher.StopwatchContract.Intent): kotlin.Unit declared in com.example.stopwatch.screen.stopwatcher.StopwatchViewModel' type=kotlin.Unit origin=null
                $this: TYPE_OP type=com.example.stopwatch.screen.stopwatcher.StopwatchViewModel origin=IMPLICIT_CAST typeOperand=com.example.stopwatch.screen.stopwatcher.StopwatchViewModel
                  GET_FIELD 'FIELD name:receiver type:kotlin.Any? visibility:protected declared in com.example.stopwatch.screen.stopwatcher.StopwatchScreenKt.StopwatchScreen.<no name provided>' type=kotlin.Any? origin=null
                    receiver: GET_VAR '<this>: com.example.stopwatch.screen.stopwatcher.StopwatchScreenKt.StopwatchScreen.<no name provided> declared in com.example.stopwatch.screen.stopwatcher.StopwatchScreenKt.StopwatchScreen.<no name provided>.invoke' type=com.example.stopwatch.screen.stopwatcher.StopwatchScreenKt.StopwatchScreen.<no name provided> origin=null
                intent: GET_VAR 'p0: com.example.stopwatch.screen.stopwatcher.StopwatchContract.Intent declared in com.example.stopwatch.screen.stopwatcher.StopwatchScreenKt.StopwatchScreen.<no name provided>.invoke' type=com.example.stopwatch.screen.stopwatcher.StopwatchContract.Intent origin=null
          FUN BRIDGE name:invoke visibility:public modality:OPEN <> ($this:com.example.stopwatch.screen.stopwatcher.StopwatchScreenKt.StopwatchScreen.<no name provided>, p1:kotlin.Any?) returnType:kotlin.Any?
            $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:com.example.stopwatch.screen.stopwatcher.StopwatchScreenKt.StopwatchScreen.<no name provided>
            VALUE_PARAMETER BRIDGE name:p1 index:0 type:kotlin.Any?
            EXPRESSION_BODY
              RETURN type=kotlin.Nothing from='public open fun invoke (p1: kotlin.Any?): kotlin.Any? declared in com.example.stopwatch.screen.stopwatcher.StopwatchScreenKt.StopwatchScreen.<no name provided>'
                CALL 'public final fun invoke (p0: com.example.stopwatch.screen.stopwatcher.StopwatchContract.Intent): kotlin.Unit declared in com.example.stopwatch.screen.stopwatcher.StopwatchScreenKt.StopwatchScreen.<no name provided>' type=kotlin.Unit origin=BRIDGE_DELEGATION
                  $this: GET_VAR '<this>: com.example.stopwatch.screen.stopwatcher.StopwatchScreenKt.StopwatchScreen.<no name provided> declared in com.example.stopwatch.screen.stopwatcher.StopwatchScreenKt.StopwatchScreen.<no name provided>.invoke' type=com.example.stopwatch.screen.stopwatcher.StopwatchScreenKt.StopwatchScreen.<no name provided> origin=null
                  p0: TYPE_OP type=com.example.stopwatch.screen.stopwatcher.StopwatchContract.Intent origin=IMPLICIT_CAST typeOperand=com.example.stopwatch.screen.stopwatcher.StopwatchContract.Intent
                    GET_VAR 'p1: kotlin.Any? declared in com.example.stopwatch.screen.stopwatcher.StopwatchScreenKt.StopwatchScreen.<no name provided>.invoke' type=kotlin.Any? origin=null
        CONSTRUCTOR_CALL 'public/*package*/ constructor <init> (receiver: kotlin.Any?) [primary] declared in com.example.stopwatch.screen.stopwatcher.StopwatchScreenKt.StopwatchScreen.<no name provided>' type=com.example.stopwatch.screen.stopwatcher.StopwatchScreenKt.StopwatchScreen.<no name provided> origin=null
          receiver: GET_VAR 'val viewModel: com.example.stopwatch.screen.stopwatcher.StopwatchViewModel [val] declared in com.example.stopwatch.screen.stopwatcher.StopwatchScreenKt.StopwatchScreen' type=com.example.stopwatch.screen.stopwatcher.StopwatchViewModel origin=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:48)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:41)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:407)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:424)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:169)
	at org.jetbrains.kotlin.backend.jvm.FileCodegen.lower(JvmPhases.kt:39)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseFactoriesKt.createFilePhase$lambda$4(PhaseFactories.kt:71)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt$createSimpleNamedCompilerPhase$1.phaseBody(PhaseBuilders.kt:69)
	at org.jetbrains.kotlin.backend.common.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:226)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:52)
	... 47 more
Caused by: org.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: Couldn't inline method call: CALL 'public final fun viewModel$default <VM> (viewModelStoreOwner: androidx.lifecycle.ViewModelStoreOwner?, key: kotlin.String?, factory: androidx.lifecycle.ViewModelProvider.Factory?, extras: androidx.lifecycle.viewmodel.CreationExtras?, $mask0: kotlin.Int, $handler: kotlin.Any?): VM of androidx.lifecycle.viewmodel.compose.ViewModelKt.viewModel$default [inline] declared in androidx.lifecycle.viewmodel.compose.ViewModelKt' type=VM of androidx.lifecycle.viewmodel.compose.ViewModelKt.viewModel$default origin=DEFAULT_DISPATCH_CALL
Method: null
File is unknown
The root cause java.lang.IllegalStateException was thrown at: org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:65)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:163)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCallGenerator.genCall(IrInlineCallGenerator.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:598)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:134)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitTypeOperator(ExpressionCodegen.kt:1076)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitTypeOperator(ExpressionCodegen.kt:134)
	at org.jetbrains.kotlin.ir.expressions.IrTypeOperatorCall.accept(IrTypeOperatorCall.kt:26)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:735)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:134)
	at org.jetbrains.kotlin.ir.declarations.IrVariable.accept(IrVariable.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:524)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:529)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:134)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:236)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:124)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:45)
	... 57 more
Caused by: java.lang.IllegalStateException: couldn't find inline method Landroidx/lifecycle/viewmodel/compose/ViewModelKt__ViewModelKt;.viewModel$default(Landroidx/lifecycle/ViewModelStoreOwner;Ljava/lang/String;Landroidx/lifecycle/ViewModelProvider$Factory;Landroidx/lifecycle/viewmodel/CreationExtras;ILjava/lang/Object;)Landroidx/lifecycle/ViewModel;
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.loadCompiledInlineFunction(SourceCompilerForInline.kt:96)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.compileInlineFunction(IrSourceCompilerForInline.kt:91)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.compileInline(InlineCodegen.kt:43)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:51)
	... 75 more


